<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>angular on Charles M. Knox</title>
    <link>https://charlesmknox.com/tags/angular/</link>
    <description>Recent content in angular on Charles M. Knox</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Apr 2020 17:02:25 +0000</lastBuildDate><atom:link href="https://charlesmknox.com/tags/angular/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Angular and Google Analytics</title>
      <link>https://charlesmknox.com/tech/software/angular/using-angular-and-google-analytics/</link>
      <pubDate>Sat, 18 Apr 2020 17:02:25 +0000</pubDate>
      
      <guid>https://charlesmknox.com/tech/software/angular/using-angular-and-google-analytics/</guid>
      <description>By default, Angular does not work very well with Google Analytics. It will only announce a page-view event when refreshing the page. This makes the router in Angular somewhat useless.
Luckily, there is an npm package called angular-gtag that hooks into the root app component of your Angular project and sends views upon router navigation.
However, I found that the README had a few implicit steps that I needed to do some searching for.</description>
    </item>
    
    <item>
      <title>How to Fix Angular Not Scrolling to Top for Routerlinks</title>
      <link>https://charlesmknox.com/tech/software/angular/how-to-fix-angular-not-scrolling-to-top-for-routerlinks/</link>
      <pubDate>Fri, 17 Apr 2020 23:30:16 +0000</pubDate>
      
      <guid>https://charlesmknox.com/tech/software/angular/how-to-fix-angular-not-scrolling-to-top-for-routerlinks/</guid>
      <description>By default, when using Angular routerLink tags in your HTML, the behavior users will experience when clicking these links is that the browser keeps the current scrollbar positions, before and after clicking.
There are cases where this is undesirable, such as when using an Angular router to route URLs (such as /home or /articles ) to Angular components.
To fix this, add in your app-routing.module.ts file the following into the @NgModule imports:</description>
    </item>
    
    <item>
      <title>Every Outbound Link Leaks Privacy</title>
      <link>https://charlesmknox.com/tech/software/webdev/every-outbound-link-leaks-privacy/</link>
      <pubDate>Fri, 17 Apr 2020 22:41:02 +0000</pubDate>
      
      <guid>https://charlesmknox.com/tech/software/webdev/every-outbound-link-leaks-privacy/</guid>
      <description>The title is a bit of an exaggeration, but it&amp;rsquo;s partly true if you don&amp;rsquo;t use the correct properties in your HTML elements.
In HTML, you should be using rel=&amp;quot;noopener noreferrer&amp;quot; along with target=&amp;quot;_blank&amp;quot; in your &amp;lt;a&amp;gt; tags - if not, you run major security risks. This GitHub Pages site shows you how: https://apal21.github.io/target-blank/
Many linters will catch this if it&amp;rsquo;s not set, so make sure that you&amp;rsquo;re using a linter when you write your code.</description>
    </item>
    
  </channel>
</rss>
